{"version":3,"sources":["js/script1.js"],"names":["heapSort","array","i","Math","floor","length","temp","console","log","join","first","slice","inputArray","setTimeout","a","prom1","Promise","resolve","then","value"],"mappings":";AAiGA,MAAMA,EAAWC,IAEV,IAAA,IAAIC,EAAIC,KAAKC,MAAMH,EAAMI,OAAS,GAAIH,GAAK,EAAGA,GAAK,EAAG,CACrDD,GAAAA,EAAMC,IAAMD,EAAMC,EAAI,GAAI,CACtBI,MAAAA,EAAOL,EAAMC,GACnBD,EAAMC,GAAKD,EAAMC,EAAI,GACrBD,EAAMC,EAAI,GAAKI,EAGbL,GADJM,QAAQC,IAAIP,EAAMQ,KAAK,OACnBR,EAAMC,IAAMD,EAAMC,EAAI,GAAI,CACtBI,MAAAA,EAAOL,EAAMC,GACnBD,EAAMC,GAAKD,EAAMC,EAAI,GACrBD,EAAMC,EAAI,GAAKI,EAEjBC,QAAQC,IAAIP,EAAMQ,KAAK,OAGnBC,MAAAA,EAAQT,EAAM,GAIbA,OAHPA,EAAM,GAAKA,EAAMA,EAAMI,OAAS,GAChCJ,EAAMA,EAAMI,OAAS,GAAKK,EAEnBT,EAAMI,OAAS,EAClB,IAAIL,EAASC,EAAMU,MAAM,EAAGV,EAAMI,OAAS,IAAKJ,EAAMA,EAAMI,OAAS,IACrEJ,GAGAW,EAAa,CAAC,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,KAAM,IAC3DL,QAAQC,IAAII,GACZL,QAAQC,IAAIR,EAASY,IAIrBC,WAAWC,IACTP,QAAQC,IAAI,MACX,GAEH,MAAMO,EAAQ,IAAIC,QAAQC,GAAWA,EAAQ,kBAC7CF,EAAMG,KAAKC,GAASZ,QAAQC,IAAIW","file":"script1.18c6c42a.js","sourceRoot":"../src","sourcesContent":["// const Btn1 = document.getElementById('btn1');\n\n// console.log(typeof Btn1);\n\n// function random(number) {\n//   return Math.floor(Math.random() * (number+1));\n// }\n\n// Btn1.addEventListener('click', () => {\n//     const rndCol = `rgb(${random(255)}, ${random(255)}, ${random(255)})`;\n//     document.body.style.backgroundColor = rndCol;\n// });\n\n// let ij = 0;\n// Btn1.addEventListener('click', clickCounter, 'bubble');\n// function clickCounter() {\n//     ij++;\n//     console.log(`clicked ${ij} times`);\n// }\n\n// // function changes object referenced by its argument\n\n// const Array111 = ['stable', 'new', 'another one', 'one more', 'the last element'];\n\n// function changeArray(arr) {\n//   arr[0] = 'changed';\n// }\n\n// changeArray(Array111); //function changes Array111\n\n// console.table(Array111);\n\n// //---------------------------------------------------\n\n// console.log('array push and unshift');\n\n// const arr22 = [22, 2225];\n// const arr225 = [55, 255, 'mmc', 'cf', 'sd'];\n// const arr55555 = [5, 55, 555, 5555, 55555];\n\n// arr22.push(...arr225);\n\n// console.log('new arr22 length', arr22.unshift(...arr55555));\n// console.table(arr22);\n\n// //---------------------------------------------------\n\n// const arraySlice = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// console.table([...arraySlice.slice(5, arraySlice.length), ...arraySlice.slice(0, 5)]);\n// console.log(\"Here it is ^\");\n\n// //---------------------------------------------------\n\n// const products = [ {\n//   id : 'sku1',\n//   qty: 1,\n// }, {\n//   id : 'sku2',\n//   qty: 2,\n// }, {\n//   id : 'sku3',\n//   qty: 3,\n// }, {\n//   id : 'sku1',\n//   qty: 6,\n// }, {\n//   id : 'sku1',\n//   qty: 8,\n// }, {\n//   id : 'sku2',\n//   qty: 19,\n// }, {\n//   id : 'sku4',\n//   qty: 1,\n// } ]\n\n// //Потрібно перебрати масив і якщо він має об'єкти в яких дублюються айді то квонтіті цих елементів потрібно сплюсувати а той обє'кт який співпав видалити з масиву.\n// //(Потрібно мутувати даний масив, створювати новий не потрібно)\n\n// function reduceDoubling(arr) {\n//   for (let i=0; i < arr.length; i++) {\n//     for (let j = i+1; j < arr.length; j++) {\n//       if (arr[i].id === arr[j].id) {\n//         arr[i].qty += arr[j].qty;\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n// }\n\n// reduceDoubling(products);\n// console.log(products);\n\n// //-----------------------------------------------------------\n\nconst heapSort = array => {\n  // forming a tree\n  for (let i = Math.floor(array.length - 2); i >= 0; i -= 1) {\n    if (array[i] <= array[i + 2]) {\n      const temp = array[i];\n      array[i] = array[i + 2];\n      array[i + 2] = temp;\n    }\n    console.log(array.join(', '));\n    if (array[i] <= array[i + 1]) {\n      const temp = array[i];\n      array[i] = array[i + 1];\n      array[i + 1] = temp;\n    }\n    console.log(array.join(', '));\n  }\n\n  const first = array[0];\n  array[0] = array[array.length - 1];\n  array[array.length - 1] = first;\n\n  return array.length > 1\n    ? [...heapSort(array.slice(0, array.length - 1)), array[array.length - 1]]\n    : array;\n};\n\nconst inputArray = [23, 1, 34, 15, 165, 312, 59, 12, 1023, 22];\nconsole.log(inputArray);\nconsole.log(heapSort(inputArray));\n\n//====================================================================\n\nsetTimeout(a => {\n  console.log('A');\n}, 0);\n\nconst prom1 = new Promise(resolve => resolve('success value'));\nprom1.then(value => console.log(value));\n//promise is a microtask would log first, then timed out function executes\n\n//====================================================================\n"]}